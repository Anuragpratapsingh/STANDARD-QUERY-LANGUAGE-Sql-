SELECT *
FROM employee;
DESCRIBE works_with;
DROP TABLE branch supplier;
CREATE TABLE employee(
 emp_id INT,
 first_name VARCHAR(20),
 last_name VARCHAR(20),
 birth_data DATE,
 sex VARCHAR(1),
 salary INT,
 PRIMARY KEY(emp_id),
 #Cannot make super_id and branch_id as foreign key abhi have to make the
 #table which have these and then only we can make them as foreign key.
 super_id INT,
 branch_id INT
);

CREATE TABLE branch(
 branch_id INT PRIMARY KEY,
 branch_name VARCHAR(20),
 mgr_id INT,
 mgr_start_date DATE,
 #Now emp_id alrady created in a table so ab can make mgr_id as a foreign
 #key.
 FOREIGN KEY(mgr_id) REFERENCES employee(emp_id) ON DELETE SET NULL
);
#Now in employee table can make the foreign keys super_id and branch_id

ALTER TABLE employee
ADD FOREIGN KEY(super_id)
REFERENCES employee(emp_id)
ON DELETE SET NULL;



ALTER TABLE employee
ADD FOREIGN KEY(branch_id)
REFERENCES branch(branch_id)
ON DELETE SET NULL;





CREATE TABLE client(
 client_id INT PRIMARY KEY,
 client_name VARCHAR(30),
 branch_id INT,
 FOREIGN KEY(branch_id) REFERENCES branch(branch_id) ON DELETE SET NULL
);
CREATE TABLE works_with(
  emp_id INT,
  client_id INT,
  total_sales INT,
  #Making 2 primary keys
  PRIMARY KEY(emp_id,client_id),
  FOREIGN KEY (emp_id) REFERENCES employee(emp_id) ON DELETE CASCADE,
  FOREIGN KEY (client_id) REFERENCES client(client_id) ON DELETE CASCADE
);
CREATE TABLE Branch_supplier(
 branch_id INT,
 supplier_name VARCHAR(30),
 supply_type VARCHAR(20),
 PRIMARY KEY(branch_id,supplier_name),
 FOREIGN KEY(branch_id) REFERENCES branch(branch_id) ON DELETE CASCADE
);
